
-->>> Caminho para chegar no arquivo dentro da pasta principal do OpenCard: catalog\view\template\account\register.twig

Field telefone: <input type="tel" name="telephone" value="" placeholder="{{ entry_telephone }}" id="input-telephone" class="form-control tel"/>

Field text: <input type="text" name="custom_field[{{ custom_field.custom_field_id }}]" value="{{ custom_field.value }}" placeholder="{{ custom_field.name }}" id="input-custom-field-{{ custom_field.custom_field_id }}" class="form-control cpf-cnpj-mask"/>

Field date: <input type="text" name="custom_field[{{ custom_field.custom_field_id }}]" value="{{ custom_field.value }}" placeholder="{{ custom_field.name }}" id="input-custom-field-{{ custom_field.custom_field_id }}" class="form-control date"/>

//Esse script deve ser colocado no final da pagina logo antes ao campo {{ footer }}.
<!--Script de mascara e Validação do campo text-->
{% block scripts %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>
<script>
  $(document).ready(function() {
    $('.cpf-cnpj-mask').on('input', function() {
      let value = $(this).val().replace(/\D/g, ''); // Remove tudo que não é número
      if (value.length < 11) {
        $(this).mask('000.000.000-00'); // Máscara de CPF
      } else {
        $(this).mask('00.000.000/0000-00'); // Máscara de CNPJ
      }
    });
    $('.tel').on('input', function() {
      let value = $(this).val().replace(/\D/g, ''); // Remove tudo que não é número
      if (value.length < 10) {
          $(this).mask('(00) 0000-0000', { placeholder: " " }); // Máscara para telefone fixo
      } else {
          $(this).mask('(00) 00000-0000', { placeholder: " " }); // Máscara para celular
      }
      // Ajusta o cursor para o final
      let thisElement = this;
      setTimeout(function () {
          thisElement.selectionStart = thisElement.selectionEnd = thisElement.value.length;
      }, 0);
    });
    // Função para aplicar a máscara de CPF ou CNPJ
    function aplicarMascara(input) {
      let value = input.value.replace(/\D/g, ''); // Remove tudo que não é número
      if (value.length <= 11) {
        // Máscara para CPF
        input.value = value.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, '$1.$2.$3-$4');
      } else {
        // Máscara para CNPJ
        input.value = value.replace(/(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})/, '$1.$2.$3/$4-$5');
      }
    }
    // Função para validar CPF
    function validarCPF(cpf) {
      cpf = cpf.replace(/\D/g, ''); // Remove não numéricos
      if (cpf.length !== 11 || /^(\d)\1{10}$/.test(cpf)) return false;

      let soma = 0;
      for (let i = 0; i < 9; i++) soma += parseInt(cpf.charAt(i)) * (10 - i);
      let resto = (soma % 11);
      let digito1 = (resto < 2) ? 0 : 11 - resto;
      if (parseInt(cpf.charAt(9)) !== digito1) return false;

      soma = 0;
      for (let i = 0; i < 10; i++) soma += parseInt(cpf.charAt(i)) * (11 - i);
      resto = (soma % 11);
      let digito2 = (resto < 2) ? 0 : 11 - resto;

      return parseInt(cpf.charAt(10)) === digito2;
    }
    function validarCNPJ(cnpj) {
      cnpj = cnpj.replace(/\D/g, ''); // Remove caracteres não numéricos
      if (cnpj.length !== 14 || /^(\d)\1{13}$/.test(cnpj)) return false;

      // Cálculo do primeiro dígito verificador
      let soma = 0;
      let pos = 5;
      for (let i = 0; i < 12; i++) {
        soma += parseInt(cnpj.charAt(i)) * pos;
        pos = (pos === 2) ? 9 : pos - 1;
      }
      let resto = soma % 11;
      let digito1 = (resto < 2) ? 0 : 11 - resto;

      // Cálculo do segundo dígito verificador
      soma = 0;
      pos = 6;
      for (let i = 0; i < 13; i++) {
        soma += parseInt(cnpj.charAt(i)) * pos;
        pos = (pos === 2) ? 9 : pos - 1;
      }
      resto = soma % 11;
      let digito2 = (resto < 2) ? 0 : 11 - resto;

      // Verifica se os dígitos calculados batem com os do CNPJ
      return (parseInt(cnpj.charAt(12)) === digito1 && parseInt(cnpj.charAt(13)) === digito2);
    }

    // Função para validar o CPF ou CNPJ
    function validarDocumento(input) {
      const value = input.value.replace(/\D/g, '');
      const id = input.id.split('-').pop(); // Obtém o ID do campo personalizado
      let isValid = true;
      let errorMessage = '';

      if (value.length <= 11) {
        // Valida CPF
        isValid = validarCPF(value);
        errorMessage = isValid ? '' : 'O CPF informado é inválido.';
      } else {
        // Valida CNPJ
        isValid = validarCNPJ(value);
        errorMessage = isValid ? '' : 'O CNPJ informado é inválido.';
      }

      const errorDiv = document.getElementById('error-custom-field-' + id);
      if (isValid) {
        errorDiv.innerHTML = '';
        input.classList.remove('is-invalid');
      } else {
        errorDiv.innerHTML = errorMessage;
        input.classList.add('is-invalid');
      }
    }
    // Adiciona evento de validação ao campo
    document.querySelectorAll('.cpf-cnpj-mask').forEach(input => {
      input.addEventListener('blur', function() {
        validarDocumento(this);
      });
    });
    $('.date').on('input', function() {
      let value = $(this).val().replace(/\D/g, ''); // Remove tudo que não é número
      if (value.length) {
        $(this).mask('00-00-0000'); //mascara para data
      } 
    });
  });
</script>
{% endblock %}
